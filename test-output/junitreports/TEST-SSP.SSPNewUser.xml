<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="ajay-singh-lodhi" failures="1" tests="31" name="SSP.SSPNewUser" time="334.837" errors="0" timestamp="2023-04-21T15:14:13 IST" skipped="0">
  <testcase classname="SSP.SSPNewUser" name="test01" time="8.664"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test24" time="13.736"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test10" time="11.095"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test08" time="11.038"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test21" time="12.781"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test12" time="10.929"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test05" time="8.672"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test15" time="11.321"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test27" time="9.061"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test00" time="6.086"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test22" time="11.623"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test02" time="8.539"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test28" time="10.430"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test17" time="11.423"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test23" time="13.558"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test25" time="13.999"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test29" time="8.026"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test30" time="9.333">
    <failure message="expected [Trail License Created] but found [Trial License Created]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [Trail License Created] but found [Trial License Created]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at SSP.SSPNewUser.test30(SSPNewUser.java:1297)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- test30 -->
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test20" time="12.571"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test16" time="11.274"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test26" time="14.677"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test13" time="11.204"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test06" time="8.997"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test18" time="11.512"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test07" time="10.836"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test14" time="11.540"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test19" time="11.456"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test11" time="11.365"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test03" time="9.014"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test04" time="8.739"/>
  <system-out/>
  <testcase classname="SSP.SSPNewUser" name="test09" time="11.338"/>
  <system-out/>
</testsuite> <!-- SSP.SSPNewUser -->
